{
  "description": "IdentityConfig is the Schema for the identity config document",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "enabled"
      ],
      "properties": {
        "adminConsoleAddress": {
          "type": "string"
        },
        "caCert": {
          "type": "boolean"
        },
        "dexConnectors": {
          "type": "object",
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "config",
                  "id",
                  "name",
                  "type"
                ],
                "properties": {
                  "config": {
                    "type": "object"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            },
            "valueFrom": {
              "type": "object",
              "properties": {
                "secretKeyRef": {
                  "description": "SecretKeySelector selects a key of a Secret.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "disablePasswordAuth": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "id",
              "roleIds"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "roleIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "identityServiceAddress": {
          "type": "string"
        },
        "ingressConfig": {
          "type": "object",
          "required": [
            "enabled"
          ],
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "ingress": {
              "type": "object",
              "required": [
                "host",
                "path"
              ],
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "host": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "tlsSecretName": {
                  "type": "string"
                }
              }
            },
            "nodePort": {
              "type": "object",
              "required": [
                "port"
              ],
              "properties": {
                "port": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "insecureSkipTLSVerify": {
          "type": "boolean"
        }
      }
    },
    "status": {
      "description": "IdentityConfigStatus defines the observed state of Identity",
      "type": "object"
    }
  }
}