fluent-bit:
  affinity: {}
  annotations: {}
  args: []
  autoscaling:
    behavior: {}
    customRules: []
    enabled: false
    maxReplicas: 3
    minReplicas: 1
    targetCPUUtilizationPercentage: 75
  command: []
  config:
    customParsers: |
      [PARSER]
          Name docker_no_time
          Format json
          Time_Keep Off
          Time_Key time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
    extraFiles: {}
    filters: |
      [FILTER]
          Name stdout
    inputs: |
      [INPUT]
          Name tail
          Path /var/log/containers/*.log
          Parser docker
          Tag <pod_name>.<container_name>
          Tag_Regex (?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<namespace_name>[^_]+)_(?<container_name>.+)-
          Skip_Long_Lines On
    outputs: |
      [OUTPUT]
          Name file
          Match imagebuild*
          Mkdir true
          Path /test/log-collector
          Format plain

      [OUTPUT]
          Name file
          Match installer*
          Mkdir true
          Path /test/log-collector
          Format plain

      # Workspaces
      [OUTPUT]
          Name file
          Match ws*.workspace
          Mkdir true
          Path /test/log-collector
          Format plain
    service: |
      [SERVICE]
          Daemon Off
          Flush {{ .Values.flush }}
          Log_Level {{ .Values.logLevel }}
          Parsers_File parsers.conf
          Parsers_File custom_parsers.conf
          HTTP_Server On
          HTTP_Listen 0.0.0.0
          HTTP_Port {{ .Values.metricsPort }}
          Health_Check On
  daemonSetVolumeMounts:
  - mountPath: /var/log
    name: varlog
  - mountPath: /var/lib/docker/containers
    name: varlibdockercontainers
    readOnly: true
  - mountPath: /etc/machine-id
    name: etcmachineid
    readOnly: true
  daemonSetVolumes:
  - hostPath:
      path: /var/log
    name: varlog
  - hostPath:
      path: /var/lib/docker/containers
    name: varlibdockercontainers
  - hostPath:
      path: /etc/machine-id
      type: File
    name: etcmachineid
  dashboards:
    annotations: {}
    enabled: false
    labelKey: grafana_dashboard
    namespace: ""
  dnsConfig: {}
  dnsPolicy: ClusterFirst
  env: []
  envFrom: []
  envWithTpl: []
  existingConfigMap: ""
  extraContainers:
  - args:
    - while true; do echo "waiting" && sleep 60; done
    command:
    - sh
    - -c
    image: busybox:1
    name: kots
    volumeMounts:
    - mountPath: /test
      name: collector
      readOnly: true
  extraPorts: []
  extraVolumeMounts:
  - mountPath: /test
    name: collector
  extraVolumes:
  - hostPath:
      path: /test
      type: DirectoryOrCreate
    name: collector
  flush: 1
  fullnameOverride: ""
  global: {}
  hostAliases: []
  hostNetwork: false
  image:
    pullPolicy: Always
    repository: cr.fluentbit.io/fluent/fluent-bit
    tag: ""
  imagePullSecrets: []
  ingress:
    annotations: {}
    className: ""
    enabled: false
    extraHosts: []
    hosts: []
    tls: []
  initContainers: []
  kind: DaemonSet
  labels:
    app: test
    component: test-log-collector
  lifecycle: {}
  livenessProbe:
    httpGet:
      path: /
      port: http
  logLevel: info
  luaScripts: {}
  metricsPort: 2020
  nameOverride: ""
  networkPolicy:
    enabled: false
  nodeSelector: {}
  openShift:
    enabled: false
    securityContextConstraints:
      annotations: {}
      create: true
  podAnnotations: {}
  podDisruptionBudget:
    annotations: {}
    enabled: false
    maxUnavailable: 30%
  podLabels:
    app: test
    component: test-log-collector
  podSecurityContext: {}
  podSecurityPolicy:
    annotations: {}
    create: false
  priorityClassName: ""
  prometheusRule:
    enabled: false
  rbac:
    create: true
    nodeAccess: false
  readinessProbe:
    httpGet:
      path: /api/v1/health
      port: http
  replicaCount: 1
  resources: {}
  securityContext: {}
  service:
    annotations: {}
    labels: {}
    port: 2020
    type: ClusterIP
  serviceAccount:
    annotations: {}
    create: true
  serviceMonitor:
    enabled: false
  testFramework:
    image:
      pullPolicy: Always
      repository: busybox
      tag: latest
  tolerations: []
  updateStrategy: {}
  volumeMounts:
  - mountPath: /fluent-bit/etc/fluent-bit.conf
    name: config
    subPath: fluent-bit.conf
  - mountPath: /fluent-bit/etc/custom_parsers.conf
    name: config
    subPath: custom_parsers.conf
