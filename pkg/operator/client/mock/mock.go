// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/operator/client/client_interface.go

// Package mock_client is a generated GoMock package.
package mock_client

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/replicatedhq/kots/pkg/operator/types"
)

// MockClientInterface is a mock of ClientInterface interface.
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface.
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance.
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// ApplyAppInformers mocks base method.
func (m *MockClientInterface) ApplyAppInformers(args types.AppInformersArgs) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ApplyAppInformers", args)
}

// ApplyAppInformers indicates an expected call of ApplyAppInformers.
func (mr *MockClientInterfaceMockRecorder) ApplyAppInformers(args interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyAppInformers", reflect.TypeOf((*MockClientInterface)(nil).ApplyAppInformers), args)
}

// DeployApp mocks base method.
func (m *MockClientInterface) DeployApp(deployArgs types.DeployAppArgs) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeployApp", deployArgs)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeployApp indicates an expected call of DeployApp.
func (mr *MockClientInterfaceMockRecorder) DeployApp(deployArgs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeployApp", reflect.TypeOf((*MockClientInterface)(nil).DeployApp), deployArgs)
}

// Init mocks base method.
func (m *MockClientInterface) Init() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init")
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init.
func (mr *MockClientInterfaceMockRecorder) Init() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockClientInterface)(nil).Init))
}

// Shutdown mocks base method.
func (m *MockClientInterface) Shutdown() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Shutdown")
}

// Shutdown indicates an expected call of Shutdown.
func (mr *MockClientInterfaceMockRecorder) Shutdown() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shutdown", reflect.TypeOf((*MockClientInterface)(nil).Shutdown))
}
