apiVersion: kots.io/v1beta1
kind: License
metadata:
  name: typeexistingclusterenvairgappedphaseupgradedinstallrbacminimalrbac
spec:
  appSlug: qakotsregression
  channelID: 1wDtc68WxhilHs1HcXZIQEn1brd
  channelName: type=existing cluster, env=airgapped, phase=upgraded install, rbac=minimal
    rbac
  customerName: type=existing cluster, env=airgapped, phase=upgraded install, rbac=minimal
    rbac
  endpoint: https://replicated.app
  entitlements:
    bool_field_1:
      title: Boolean Field 1
      value: true
      valueType: Boolean
    expires_at:
      description: License Expiration
      title: Expiration
      value: ""
      valueType: String
    hidden_field_1:
      isHidden: true
      title: Hidden Field 1
      value: hide me
      valueType: String
    int_field_1:
      title: Integer Field 1
      value: 123
      valueType: Integer
    required_field_1:
      title: Required Field 1
      value: require me
      valueType: String
    str_field_1:
      title: String Field 1
      value: abc
      valueType: String
    txt_field_1:
      title: Text Field 1
      value: |-
        abc
        xyz
      valueType: Text
  isAirgapSupported: true
  isGitOpsSupported: true
  isNewKotsUiEnabled: true
  isSnapshotSupported: true
  licenseID: 1wEWBmW4i2ALCLHvJL2dqtHjorV
  licenseSequence: 8
  licenseType: prod
  signature: eyJsaWNlbnNlRGF0YSI6ImV5SmhjR2xXWlhKemFXOXVJam9pYTI5MGN5NXBieTkyTVdKbGRHRXhJaXdpYTJsdVpDSTZJa3hwWTJWdWMyVWlMQ0p0WlhSaFpHRjBZU0k2ZXlKdVlXMWxJam9pZEhsd1pXVjRhWE4wYVc1blkyeDFjM1JsY21WdWRtRnBjbWRoY0hCbFpIQm9ZWE5sZFhCbmNtRmtaV1JwYm5OMFlXeHNjbUpoWTIxcGJtbHRZV3h5WW1GakluMHNJbk53WldNaU9uc2liR2xqWlc1elpVbEVJam9pTVhkRlYwSnRWelJwTWtGTVEweElka3BNTW1SeGRFaHFiM0pXSWl3aWJHbGpaVzV6WlZSNWNHVWlPaUp3Y205a0lpd2lZM1Z6ZEc5dFpYSk9ZVzFsSWpvaWRIbHdaVDFsZUdsemRHbHVaeUJqYkhWemRHVnlMQ0JsYm5ZOVlXbHlaMkZ3Y0dWa0xDQndhR0Z6WlQxMWNHZHlZV1JsWkNCcGJuTjBZV3hzTENCeVltRmpQVzFwYm1sdFlXd2djbUpoWXlJc0ltRndjRk5zZFdjaU9pSnhZV3R2ZEhOeVpXZHlaWE56YVc5dUlpd2lZMmhoYm01bGJFbEVJam9pTVhkRWRHTTJPRmQ0YUdsc1NITXhTR05ZV2tsUlJXNHhZbkprSWl3aVkyaGhibTVsYkU1aGJXVWlPaUowZVhCbFBXVjRhWE4wYVc1bklHTnNkWE4wWlhJc0lHVnVkajFoYVhKbllYQndaV1FzSUhCb1lYTmxQWFZ3WjNKaFpHVmtJR2x1YzNSaGJHd3NJSEppWVdNOWJXbHVhVzFoYkNCeVltRmpJaXdpYkdsalpXNXpaVk5sY1hWbGJtTmxJam80TENKbGJtUndiMmx1ZENJNkltaDBkSEJ6T2k4dmNtVndiR2xqWVhSbFpDNWhjSEFpTENKbGJuUnBkR3hsYldWdWRITWlPbnNpWW05dmJGOW1hV1ZzWkY4eElqcDdJblJwZEd4bElqb2lRbTl2YkdWaGJpQkdhV1ZzWkNBeElpd2lkbUZzZFdVaU9uUnlkV1VzSW5aaGJIVmxWSGx3WlNJNklrSnZiMnhsWVc0aWZTd2laWGh3YVhKbGMxOWhkQ0k2ZXlKMGFYUnNaU0k2SWtWNGNHbHlZWFJwYjI0aUxDSmtaWE5qY21sd2RHbHZiaUk2SWt4cFkyVnVjMlVnUlhod2FYSmhkR2x2YmlJc0luWmhiSFZsSWpvaUlpd2lkbUZzZFdWVWVYQmxJam9pVTNSeWFXNW5JbjBzSW1ocFpHUmxibDltYVdWc1pGOHhJanA3SW5ScGRHeGxJam9pU0dsa1pHVnVJRVpwWld4a0lERWlMQ0oyWVd4MVpTSTZJbWhwWkdVZ2JXVWlMQ0oyWVd4MVpWUjVjR1VpT2lKVGRISnBibWNpTENKcGMwaHBaR1JsYmlJNmRISjFaWDBzSW1sdWRGOW1hV1ZzWkY4eElqcDdJblJwZEd4bElqb2lTVzUwWldkbGNpQkdhV1ZzWkNBeElpd2lkbUZzZFdVaU9qRXlNeXdpZG1Gc2RXVlVlWEJsSWpvaVNXNTBaV2RsY2lKOUxDSnlaWEYxYVhKbFpGOW1hV1ZzWkY4eElqcDdJblJwZEd4bElqb2lVbVZ4ZFdseVpXUWdSbWxsYkdRZ01TSXNJblpoYkhWbElqb2ljbVZ4ZFdseVpTQnRaU0lzSW5aaGJIVmxWSGx3WlNJNklsTjBjbWx1WnlKOUxDSnpkSEpmWm1sbGJHUmZNU0k2ZXlKMGFYUnNaU0k2SWxOMGNtbHVaeUJHYVdWc1pDQXhJaXdpZG1Gc2RXVWlPaUpoWW1NaUxDSjJZV3gxWlZSNWNHVWlPaUpUZEhKcGJtY2lmU3dpZEhoMFgyWnBaV3hrWHpFaU9uc2lkR2wwYkdVaU9pSlVaWGgwSUVacFpXeGtJREVpTENKMllXeDFaU0k2SW1GaVkxeHVlSGw2SWl3aWRtRnNkV1ZVZVhCbElqb2lWR1Y0ZENKOWZTd2lhWE5CYVhKbllYQlRkWEJ3YjNKMFpXUWlPblJ5ZFdVc0ltbHpSMmwwVDNCelUzVndjRzl5ZEdWa0lqcDBjblZsTENKcGMxTnVZWEJ6YUc5MFUzVndjRzl5ZEdWa0lqcDBjblZsTENKcGMwNWxkMHR2ZEhOVmFVVnVZV0pzWldRaU9uUnlkV1Y5ZlE9PSIsImlubmVyU2lnbmF0dXJlIjoiZXlKc2FXTmxibk5sVTJsbmJtRjBkWEpsSWpvaWF6QlljVkp0YVRsdE9IUlRSSG94UlVkUmRIbFRXbGN2TWpOUFRWbFNSVlZOY1RseWNtOWxWWEY0VlUxUVVESmxWRXRPT1ZsR2RGcDBkbWRzUkRWTE1FcDVkVnAwY0VsUU4zYzVjWEkwZGtWU1pqSTNjM2haV2tSVk4zVk5NMFZEYlZSd2NVcGhUWFJhTm1WcVF6SXdhVVJOYzBkdlpWVXJPV1pJY0VkVFR5OVZTR05ZVWs1NFFtUXpLekZPUkVWWWNIUTJaVFJqV2toNlJXOU9MMUpwZUdseU0xcHBlR3d2VEd0TE4yOXZNWFJOVFZaU1FtbE5PRmxzZUdseGVGRXdWa3RqVlRZek5UVnVTVlZTYzBOb2ExZzBjbUp3VTFoa1UwRkpWMDFOSzBwcUswRldhMmhzTTJKQk1GbzVSMEpCYmxSTU5rWndVMmRwT0VsdVRFaGhTelpGWlhWWVNXNUpkSFpEYm10SWFTOUhSSEZEZG5WVlEzaEVjMjQ0Tm1JMGFHRTNhRFZETTNaU1RIYzJha2huTm5sVFppdE5ORkJDVHpkcWMzUjFUMnRZZEc5MlZpOUxNVXhpVDIxcWEzaFhLMEY2VldOblBUMGlMQ0p3ZFdKc2FXTkxaWGtpT2lJdExTMHRMVUpGUjBsT0lGQlZRa3hKUXlCTFJWa3RMUzB0TFZ4dVRVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVGMWJGVktieXRLZFdsRVJtOW1kRkJ6TVhOMWFseHVhRmRrTjFsQlJYaHlja2h2WnpkVWIycERNR1Z4TVhCQmJGTlhSbEZ4WW1sbGVXTnVVVUU0Tm14V1VEaEhjV2t4YTJOeU5tazJUa0YwYTNST1RGRmpabHh1V1dsWFJIRkxNREoyZGxVM2FYUmxWVnBMWkZOa0swdFlabGhZVG13eE1rbHFUbXMxYkdRdlJGVnNNSGhTVlhOaEwwTm1VM1ZUUzJoaWQxTTNNSHByVTF4dU5FMUJhMHh1WmxSWlMzSnRjMmxoTUhjNFRVNVRaV3BHVVc1d1IwNUZhMVpsYzFsa1kyNWllV1puZGxsc1NIcHBLM0V5YkV0UVNtY3pOamt5TjJwT1NGeHVSV3A2Uld4TldtRnFSMnBFTkZjMmJsaFJNMVp1VmxZeFdVZHJNVnBqWkVwRWJXWXpTM0V5TUU1WGVESkdkemRWWlcxNllXMDBVQzlHV0c1eWMwaEZURnh1U1hGUk5YRmtSREJEYW5GbFJXSXJNWFZXTjA5cFNVeEthRUZFZFdGdFZWRjRhVGhXVTNOT2MxaHRlamxzUVRWUVFtTldjalJhY0hCTVQxWmpOMk5EZGx4dU5GRkpSRUZSUVVKY2JpMHRMUzB0UlU1RUlGQlZRa3hKUXlCTFJWa3RMUzB0TFZ4dUlpd2lhMlY1VTJsbmJtRjBkWEpsSWpvaVpYbEtlbUZYWkhWWldGSXhZMjFWYVU5cFNrWmtSMDVSVTFSa2JXUklSVEJrVTNSWFZFUkthbE5VUWpaa01WRjNURE5TUWxFeldtdFBSVVpPVTBNNVVFdDZTbFZVUlhCNVQwTTVhRmxxWkhoWlZ6QXpZVEZaZGxGdE9WZFRWWFJ6WXpKRmVtVkZWa3BrYW1SeVpGUmFWRll4VWtWaVYyUndWRE5vU2xreWNGWlJiazE2WWxkMFVsWXdaM2RoYVRsM1YxUnNVMDR4UmtKTE1qbFBWbXBLVWs1NWRGTlhWbWhEWlVWR1VGbFZUbEZOTURWMlUycEpkMWxZU2xaUFJ6RllZM3BvY0ZveFRrdFdSMlJTWVVWWmVFMUZTa3BYYkVaMldsZG9kMkV5UmtsWmFsSXdZMFpzY21GWGEzaFdWR04yV1RGR1ExTXlkRnBTUjA1MldXdHdiRlZ1Y0hOTmExRXdaVzV2TVZOdGJGcFdSVkpSV2xjNVlWTlhjRkJoYmtaYVdYbDBXbFJJVG5sVGJURkNUakpLY0dOV1RrUmhWbEpFVDBSV1QxZHVVbXhUTVVaNVZXcHJlRTFVWkdsbFIwcHJZekJvUWxKV1drTmxiVTV6VGtob2MyTkdTblpoTTFVMVkwVmFRMWxZYUcxaVNHeG9XbFJzU2xFd2VIVlhXR040VlcwNWRHTnFSbkpUU0ZwRlpXcEdNbUpXV2pGVFJtUlBaVlprTldNeGNHMVdWVFZ3WTNwTmVsa3dOV0ZXV0ZacVkycEthRk41T1ZsWFZteFlWRVUxVlU5V1VsQlRSMjl5VkVWc1ZWVllSVE5pVkZJeVdYcHNkMHN3UlRsUVUwbHpTVzFrYzJJeVNtaGlSWFJzWlZWc2EwbHFiMmxaYlZKc1dsUlZNazVVV1hkWk1scHBUa1JPYWs5WFNYbFBSMHB0VDFSb2JGbFhUbWhhYlVVeVRrUlphV1pSUFQwaWZRPT0ifQ==
