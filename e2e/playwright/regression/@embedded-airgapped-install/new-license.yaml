apiVersion: kots.io/v1beta1
kind: License
metadata:
  name: typeembeddedclusterenvairgappedphasenewinstallrbacclusteradmin
spec:
  appSlug: qakotsregression
  channelID: 1qocvipE0GJBTncRszwWpfARdVb
  channelName: type=embedded cluster, env=airgapped, phase=new install, rbac=cluster
    admin
  customerName: type=embedded cluster, env=airgapped, phase=new install, rbac=cluster
    admin
  endpoint: https://replicated.app
  entitlements:
    bool_field_1:
      title: Boolean Field 1
      value: true
      valueType: Boolean
    expires_at:
      description: License Expiration
      title: Expiration
      value: ""
      valueType: String
    hidden_field_1:
      isHidden: true
      title: Hidden Field 1
      value: hide me
      valueType: String
    int_field_1:
      title: Integer Field 1
      value: 123
      valueType: Integer
    required_field_1:
      title: Required Field 1
      value: require me updated
      valueType: String
    str_field_1:
      title: String Field 1
      value: abc
      valueType: String
    txt_field_1:
      title: Text Field 1
      value: |-
        abc
        xyz
      valueType: Text
  isAirgapSupported: true
  isGitOpsSupported: true
  isNewKotsUiEnabled: true
  isSnapshotSupported: true
  licenseID: 1qoczp6VdOEizTXwu4edsxDsVyM
  licenseSequence: 29
  licenseType: prod
  signature: eyJsaWNlbnNlRGF0YSI6ImV5SmhjR2xXWlhKemFXOXVJam9pYTI5MGN5NXBieTkyTVdKbGRHRXhJaXdpYTJsdVpDSTZJa3hwWTJWdWMyVWlMQ0p0WlhSaFpHRjBZU0k2ZXlKdVlXMWxJam9pZEhsd1pXVnRZbVZrWkdWa1kyeDFjM1JsY21WdWRtRnBjbWRoY0hCbFpIQm9ZWE5sYm1WM2FXNXpkR0ZzYkhKaVlXTmpiSFZ6ZEdWeVlXUnRhVzRpZlN3aWMzQmxZeUk2ZXlKc2FXTmxibk5sU1VRaU9pSXhjVzlqZW5BMlZtUlBSV2w2VkZoM2RUUmxaSE40UkhOV2VVMGlMQ0pzYVdObGJuTmxWSGx3WlNJNkluQnliMlFpTENKamRYTjBiMjFsY2s1aGJXVWlPaUowZVhCbFBXVnRZbVZrWkdWa0lHTnNkWE4wWlhJc0lHVnVkajFoYVhKbllYQndaV1FzSUhCb1lYTmxQVzVsZHlCcGJuTjBZV3hzTENCeVltRmpQV05zZFhOMFpYSWdZV1J0YVc0aUxDSmhjSEJUYkhWbklqb2ljV0ZyYjNSemNtVm5jbVZ6YzJsdmJpSXNJbU5vWVc1dVpXeEpSQ0k2SWpGeGIyTjJhWEJGTUVkS1FsUnVZMUp6ZW5kWGNHWkJVbVJXWWlJc0ltTm9ZVzV1Wld4T1lXMWxJam9pZEhsd1pUMWxiV0psWkdSbFpDQmpiSFZ6ZEdWeUxDQmxiblk5WVdseVoyRndjR1ZrTENCd2FHRnpaVDF1WlhjZ2FXNXpkR0ZzYkN3Z2NtSmhZejFqYkhWemRHVnlJR0ZrYldsdUlpd2liR2xqWlc1elpWTmxjWFZsYm1ObElqb3lPU3dpWlc1a2NHOXBiblFpT2lKb2RIUndjem92TDNKbGNHeHBZMkYwWldRdVlYQndJaXdpWlc1MGFYUnNaVzFsYm5SeklqcDdJbUp2YjJ4ZlptbGxiR1JmTVNJNmV5SjBhWFJzWlNJNklrSnZiMnhsWVc0Z1JtbGxiR1FnTVNJc0luWmhiSFZsSWpwMGNuVmxMQ0oyWVd4MVpWUjVjR1VpT2lKQ2IyOXNaV0Z1SW4wc0ltVjRjR2x5WlhOZllYUWlPbnNpZEdsMGJHVWlPaUpGZUhCcGNtRjBhVzl1SWl3aVpHVnpZM0pwY0hScGIyNGlPaUpNYVdObGJuTmxJRVY0Y0dseVlYUnBiMjRpTENKMllXeDFaU0k2SWlJc0luWmhiSFZsVkhsd1pTSTZJbE4wY21sdVp5SjlMQ0pvYVdSa1pXNWZabWxsYkdSZk1TSTZleUowYVhSc1pTSTZJa2hwWkdSbGJpQkdhV1ZzWkNBeElpd2lkbUZzZFdVaU9pSm9hV1JsSUcxbElpd2lkbUZzZFdWVWVYQmxJam9pVTNSeWFXNW5JaXdpYVhOSWFXUmtaVzRpT25SeWRXVjlMQ0pwYm5SZlptbGxiR1JmTVNJNmV5SjBhWFJzWlNJNklrbHVkR1ZuWlhJZ1JtbGxiR1FnTVNJc0luWmhiSFZsSWpveE1qTXNJblpoYkhWbFZIbHdaU0k2SWtsdWRHVm5aWElpZlN3aWNtVnhkV2x5WldSZlptbGxiR1JmTVNJNmV5SjBhWFJzWlNJNklsSmxjWFZwY21Wa0lFWnBaV3hrSURFaUxDSjJZV3gxWlNJNkluSmxjWFZwY21VZ2JXVWdkWEJrWVhSbFpDSXNJblpoYkhWbFZIbHdaU0k2SWxOMGNtbHVaeUo5TENKemRISmZabWxsYkdSZk1TSTZleUowYVhSc1pTSTZJbE4wY21sdVp5QkdhV1ZzWkNBeElpd2lkbUZzZFdVaU9pSmhZbU1pTENKMllXeDFaVlI1Y0dVaU9pSlRkSEpwYm1jaWZTd2lkSGgwWDJacFpXeGtYekVpT25zaWRHbDBiR1VpT2lKVVpYaDBJRVpwWld4a0lERWlMQ0oyWVd4MVpTSTZJbUZpWTF4dWVIbDZJaXdpZG1Gc2RXVlVlWEJsSWpvaVZHVjRkQ0o5ZlN3aWFYTkJhWEpuWVhCVGRYQndiM0owWldRaU9uUnlkV1VzSW1selIybDBUM0J6VTNWd2NHOXlkR1ZrSWpwMGNuVmxMQ0pwYzFOdVlYQnphRzkwVTNWd2NHOXlkR1ZrSWpwMGNuVmxMQ0pwYzA1bGQwdHZkSE5WYVVWdVlXSnNaV1FpT25SeWRXVjlmUT09IiwiaW5uZXJTaWduYXR1cmUiOiJleUpzYVdObGJuTmxVMmxuYm1GMGRYSmxJam9pVkZSS2IxUjVWVTR6YW1GelFtZ3phbTVtTjFsVWFEQkNUV1IyYkVNM1VYQkNLMjlpYWxCd1UxUmpXVGRMVkhKcU1YcFRlbTFGVlZsR1QxQTNaMUJIZFV4RFNrbHdhbTU0UW5JcmJ6bGlXVWRzZERoNmQxRndUbEZTZVhoelUzaEpNa1JXWjJwWmREQk9ORWg0TlhaWWVrUXhNR2MwZFhSUGFXODRXbmRNV0dsQlRUaDBla2REYmxSc2RqRkhOM1JaTW01elUwdDJaazg0TW1RMmIzb3dWVk5LYWk5TE9VTnVLMGRLVVcxM1ZYWkdiMmszVG5sMmJ6SnpaR3RQUlVkUU0wVTRWV3B4YWpaWWJuWmxUVlZHWTNaeVJraE1RVmhZWmpadk9YSlJWbUpqWWxsdU9VcG1hR2huWW1jNVZuSk1MMmNyVEhOclNqRlVlSE5PVUZNMGMwMVFla1phUkZSaWJrWjRPVVlyYUdORFIwUXJUVzV3YjAwd1kyMVJSM1ZMWTJOeFptWjVhRGgyVFd4cWFXdDBObVUxYlRKblJsWmFia3BSYXpONFprZElVRlZsTjIwMGIzazROa2N4UVVRclRtUlJSSEpCUFQwaUxDSndkV0pzYVdOTFpYa2lPaUl0TFMwdExVSkZSMGxPSUZCVlFreEpReUJMUlZrdExTMHRMVnh1VFVsSlFrbHFRVTVDWjJ0eGFHdHBSemwzTUVKQlVVVkdRVUZQUTBGUk9FRk5TVWxDUTJkTFEwRlJSVUYxYkZWS2J5dEtkV2xFUm05bWRGQnpNWE4xYWx4dWFGZGtOMWxCUlhoeWNraHZaemRVYjJwRE1HVnhNWEJCYkZOWFJsRnhZbWxsZVdOdVVVRTRObXhXVURoSGNXa3hhMk55Tm1rMlRrRjBhM1JPVEZGalpseHVXV2xYUkhGTE1ESjJkbFUzYVhSbFZWcExaRk5rSzB0WVpsaFlUbXd4TWtscVRtczFiR1F2UkZWc01IaFNWWE5oTDBObVUzVlRTMmhpZDFNM01IcHJVMXh1TkUxQmEweHVabFJaUzNKdGMybGhNSGM0VFU1VFpXcEdVVzV3UjA1RmExWmxjMWxrWTI1aWVXWm5kbGxzU0hwcEszRXliRXRRU21jek5qa3lOMnBPU0Z4dVJXcDZSV3hOV21GcVIycEVORmMyYmxoUk0xWnVWbFl4V1Vkck1WcGpaRXBFYldZelMzRXlNRTVYZURKR2R6ZFZaVzE2WVcwMFVDOUdXRzV5YzBoRlRGeHVTWEZSTlhGa1JEQkRhbkZsUldJck1YVldOMDlwU1V4S2FFRkVkV0Z0VlZGNGFUaFdVM05PYzFodGVqbHNRVFZRUW1OV2NqUmFjSEJNVDFaak4yTkRkbHh1TkZGSlJFRlJRVUpjYmkwdExTMHRSVTVFSUZCVlFreEpReUJMUlZrdExTMHRMVnh1SWl3aWEyVjVVMmxuYm1GMGRYSmxJam9pWlhsS2VtRlhaSFZaV0ZJeFkyMVZhVTlwU2xKT01sbHlZa2RLYlZWNmJGaE9SRTVZWkcxM2VrNHlXVFJWUmtwQ1duazVkVmxZWTNwaE1sbDRXbFZ2TldFeGFHdFphbVJGVjFSck5WTkhUazFpYTBwT1RERkdUbFpGVmpOaVJYQkpWbFZrYVdOV1kzbGxWbEowVTBaQ2NGcFZUWGRaYlZwd1VXdE9iVlJWTVRKTWVsbDVZVlJrYUdSWE1UQmhiVGxDWW0xNFVHUXlSbk5XVmxJMlpEQkZlR0l3YURCUlZ6Vk9Za2hPZWxWWGVGUk5WRVp2VkZoa2ExZHFTbXROTUhoUFZWVkdjV0pJVWxoamJrNVVUVEowZFdOVmVIVmliRUpQWW01d2NXUnNSbkZqTUd4TVltNXNkRmRzU25CU1YzUlNUMVZzZGtzd05YWlJXRUpxVXpKT1NGRlZOVUpoYkVKUldWaEtWRkZXVGtOVE1HOTZWRWhrYjJSSVVuZGFlbVJIVkRCd05WcDZXbEJhZWxwcVVUSlJOVlZHUm0xaFZtaFhUMGhrY21OdFRUUmhWbG95VW1zeGVVMVdVazVrYm1NeFkxVjBkMVF4YkVWT01VSm9VbGM1V1ZkWVVUQmFibkIyVXpOVk1GWnVVVEZsVkVsMldWVmFNRnBHVVRKVWFsb3laVlJXTkU5Rk1YQmxSMHAyVkZkRmVGSkZaM2ROTTFKaFZHMHhNVmx0ZEZWYVYyYzFWMnBXZDFwNlVtMWxWbkJyVkRJeFQxSkhUWEpTYWtKMFRrVmFTVlZIZEVKTlIzUnZUbGhvVkZSdFduRlpNamsxVTNwRmNsTnVZemxRVTBselNXMWtjMkl5U21oaVJYUnNaVlZzYTBscWIybFpiVkpzV2xSVk1rNVVXWGRaTWxwcFRrUk9hazlYU1hsUFIwcHRUMVJvYkZsWFRtaGFiVVV5VGtSWmFXWlJQVDBpZlE9PSJ9
