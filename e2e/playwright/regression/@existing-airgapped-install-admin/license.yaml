apiVersion: kots.io/v1beta1
kind: License
metadata:
  name: typeexistingclusterenvairgappedphasenewinstallrbacclusteradmin
spec:
  appSlug: qakotsregression
  channelID: 1riP4oQC5ZOaqciRwLf14I6yn2l
  channelName: type=existing cluster, env=airgapped, phase=new install, rbac=cluster
    admin
  customerName: type=existing cluster, env=airgapped, phase=new install, rbac=cluster
    admin
  endpoint: https://replicated.app
  entitlements:
    bool_field_1:
      title: Boolean Field 1
      value: true
      valueType: Boolean
    expires_at:
      description: License Expiration
      title: Expiration
      value: ""
      valueType: String
    hidden_field_1:
      isHidden: true
      title: Hidden Field 1
      value: hide me
      valueType: String
    int_field_1:
      title: Integer Field 1
      value: 123
      valueType: Integer
    required_field_1:
      title: Required Field 1
      value: require me
      valueType: String
    str_field_1:
      title: String Field 1
      value: abc
      valueType: String
    txt_field_1:
      title: Text Field 1
      value: |-
        abc
        xyz
      valueType: Text
  isAirgapSupported: true
  isGitOpsSupported: true
  isNewKotsUiEnabled: true
  isSnapshotSupported: true
  licenseID: 1riYWkuo5PdMtD4imgTYX699IdU
  licenseSequence: 7
  licenseType: prod
  signature: eyJsaWNlbnNlRGF0YSI6ImV5SmhjR2xXWlhKemFXOXVJam9pYTI5MGN5NXBieTkyTVdKbGRHRXhJaXdpYTJsdVpDSTZJa3hwWTJWdWMyVWlMQ0p0WlhSaFpHRjBZU0k2ZXlKdVlXMWxJam9pZEhsd1pXVjRhWE4wYVc1blkyeDFjM1JsY21WdWRtRnBjbWRoY0hCbFpIQm9ZWE5sYm1WM2FXNXpkR0ZzYkhKaVlXTmpiSFZ6ZEdWeVlXUnRhVzRpZlN3aWMzQmxZeUk2ZXlKc2FXTmxibk5sU1VRaU9pSXhjbWxaVjJ0MWJ6VlFaRTEwUkRScGJXZFVXVmcyT1RsSlpGVWlMQ0pzYVdObGJuTmxWSGx3WlNJNkluQnliMlFpTENKamRYTjBiMjFsY2s1aGJXVWlPaUowZVhCbFBXVjRhWE4wYVc1bklHTnNkWE4wWlhJc0lHVnVkajFoYVhKbllYQndaV1FzSUhCb1lYTmxQVzVsZHlCcGJuTjBZV3hzTENCeVltRmpQV05zZFhOMFpYSWdZV1J0YVc0aUxDSmhjSEJUYkhWbklqb2ljV0ZyYjNSemNtVm5jbVZ6YzJsdmJpSXNJbU5vWVc1dVpXeEpSQ0k2SWpGeWFWQTBiMUZETlZwUFlYRmphVkozVEdZeE5FazJlVzR5YkNJc0ltTm9ZVzV1Wld4T1lXMWxJam9pZEhsd1pUMWxlR2x6ZEdsdVp5QmpiSFZ6ZEdWeUxDQmxiblk5WVdseVoyRndjR1ZrTENCd2FHRnpaVDF1WlhjZ2FXNXpkR0ZzYkN3Z2NtSmhZejFqYkhWemRHVnlJR0ZrYldsdUlpd2liR2xqWlc1elpWTmxjWFZsYm1ObElqbzNMQ0psYm1Sd2IybHVkQ0k2SW1oMGRIQnpPaTh2Y21Wd2JHbGpZWFJsWkM1aGNIQWlMQ0psYm5ScGRHeGxiV1Z1ZEhNaU9uc2lZbTl2YkY5bWFXVnNaRjh4SWpwN0luUnBkR3hsSWpvaVFtOXZiR1ZoYmlCR2FXVnNaQ0F4SWl3aWRtRnNkV1VpT25SeWRXVXNJblpoYkhWbFZIbHdaU0k2SWtKdmIyeGxZVzRpZlN3aVpYaHdhWEpsYzE5aGRDSTZleUowYVhSc1pTSTZJa1Y0Y0dseVlYUnBiMjRpTENKa1pYTmpjbWx3ZEdsdmJpSTZJa3hwWTJWdWMyVWdSWGh3YVhKaGRHbHZiaUlzSW5aaGJIVmxJam9pSWl3aWRtRnNkV1ZVZVhCbElqb2lVM1J5YVc1bkluMHNJbWhwWkdSbGJsOW1hV1ZzWkY4eElqcDdJblJwZEd4bElqb2lTR2xrWkdWdUlFWnBaV3hrSURFaUxDSjJZV3gxWlNJNkltaHBaR1VnYldVaUxDSjJZV3gxWlZSNWNHVWlPaUpUZEhKcGJtY2lMQ0pwYzBocFpHUmxiaUk2ZEhKMVpYMHNJbWx1ZEY5bWFXVnNaRjh4SWpwN0luUnBkR3hsSWpvaVNXNTBaV2RsY2lCR2FXVnNaQ0F4SWl3aWRtRnNkV1VpT2pFeU15d2lkbUZzZFdWVWVYQmxJam9pU1c1MFpXZGxjaUo5TENKeVpYRjFhWEpsWkY5bWFXVnNaRjh4SWpwN0luUnBkR3hsSWpvaVVtVnhkV2x5WldRZ1JtbGxiR1FnTVNJc0luWmhiSFZsSWpvaWNtVnhkV2x5WlNCdFpTSXNJblpoYkhWbFZIbHdaU0k2SWxOMGNtbHVaeUo5TENKemRISmZabWxsYkdSZk1TSTZleUowYVhSc1pTSTZJbE4wY21sdVp5QkdhV1ZzWkNBeElpd2lkbUZzZFdVaU9pSmhZbU1pTENKMllXeDFaVlI1Y0dVaU9pSlRkSEpwYm1jaWZTd2lkSGgwWDJacFpXeGtYekVpT25zaWRHbDBiR1VpT2lKVVpYaDBJRVpwWld4a0lERWlMQ0oyWVd4MVpTSTZJbUZpWTF4dWVIbDZJaXdpZG1Gc2RXVlVlWEJsSWpvaVZHVjRkQ0o5ZlN3aWFYTkJhWEpuWVhCVGRYQndiM0owWldRaU9uUnlkV1VzSW1selIybDBUM0J6VTNWd2NHOXlkR1ZrSWpwMGNuVmxMQ0pwYzFOdVlYQnphRzkwVTNWd2NHOXlkR1ZrSWpwMGNuVmxMQ0pwYzA1bGQwdHZkSE5WYVVWdVlXSnNaV1FpT25SeWRXVjlmUT09IiwiaW5uZXJTaWduYXR1cmUiOiJleUpzYVdObGJuTmxVMmxuYm1GMGRYSmxJam9pWjBoWE1WbEJVMFF2WjNSWlVYRnRaVXhJTDNCaWFrZHJLMnMyUkdGNlZXeFNTemM0SzNCdFpqTm9ObVZ1Ums1M1lWSlJjME5tTjFnd2JYWkRUalZWZGxodlIySXlWbEZ6ZEdwd2NGQnlSamhEVUhKWFNXeERWSEF5WVhkV1RuUmhjRkJ2ZW05V2VtOUtWMDR5U1UxclprTnRiR1J5YTFGbFZVaDVUVmRMZVVacVdqZGlOREV4VGxkR1RHMTFlVEpvVEV4WFdFOVVlbFo0ZEcxNWExWm1aMGhPY2xobU5XWmpXVFkxZG1FM2MyNUtVbkJqTVVSamJGQk9NMnBpYkdaSE5FMUdNbkZqUnpORFZVRnBUbU5oWjBKV1ZsSjBZM2hJYjJkNmFpdHNLM1YxY0hoYVQxQklOVzVSYVZoaFJsUnVhVzFLVFVwUlRHNHpNemxKS3pkNlNVTnNLMnhyYkhBMk1VTmpaUzlyU2pSbGFESjBXVzE2YkU1aE1YTTBiamN3Y21sRldFTjZRM1UzU2xCWFpqTnZhbXc0Uld4dE1uUkpRbVZKWkhCNWNGTkZSVlE0V0drNGMwSjFWMFJ1Y0c5emFYTjFiMmRCUFQwaUxDSndkV0pzYVdOTFpYa2lPaUl0TFMwdExVSkZSMGxPSUZCVlFreEpReUJMUlZrdExTMHRMVnh1VFVsSlFrbHFRVTVDWjJ0eGFHdHBSemwzTUVKQlVVVkdRVUZQUTBGUk9FRk5TVWxDUTJkTFEwRlJSVUYxYkZWS2J5dEtkV2xFUm05bWRGQnpNWE4xYWx4dWFGZGtOMWxCUlhoeWNraHZaemRVYjJwRE1HVnhNWEJCYkZOWFJsRnhZbWxsZVdOdVVVRTRObXhXVURoSGNXa3hhMk55Tm1rMlRrRjBhM1JPVEZGalpseHVXV2xYUkhGTE1ESjJkbFUzYVhSbFZWcExaRk5rSzB0WVpsaFlUbXd4TWtscVRtczFiR1F2UkZWc01IaFNWWE5oTDBObVUzVlRTMmhpZDFNM01IcHJVMXh1TkUxQmEweHVabFJaUzNKdGMybGhNSGM0VFU1VFpXcEdVVzV3UjA1RmExWmxjMWxrWTI1aWVXWm5kbGxzU0hwcEszRXliRXRRU21jek5qa3lOMnBPU0Z4dVJXcDZSV3hOV21GcVIycEVORmMyYmxoUk0xWnVWbFl4V1Vkck1WcGpaRXBFYldZelMzRXlNRTVYZURKR2R6ZFZaVzE2WVcwMFVDOUdXRzV5YzBoRlRGeHVTWEZSTlhGa1JEQkRhbkZsUldJck1YVldOMDlwU1V4S2FFRkVkV0Z0VlZGNGFUaFdVM05PYzFodGVqbHNRVFZRUW1OV2NqUmFjSEJNVDFaak4yTkRkbHh1TkZGSlJFRlJRVUpjYmkwdExTMHRSVTVFSUZCVlFreEpReUJMUlZrdExTMHRMVnh1SWl3aWEyVjVVMmxuYm1GMGRYSmxJam9pWlhsS2VtRlhaSFZaV0ZJeFkyMVZhVTlwU2xWVmEyUmFWa2QwV1ZsVVJrcFdSRkpvV2xWMGNtUklhRU5oUkVKVldsZGFWbGRWTldsVVZFWlpaREJPV1ZWc2NFWkxlbEpJVTNwV2ExbFhPVWxaYkVVMVZqRnZkbFpITlZSaFZUaDVWakJrZWxGNlNtdFZiR1JYVGtWc1dVd3dVa3haTW1SaFlWVk9jMVJGTlUxVWJrNXdVVzVTY1ZwV1JrcFNNRW8xWVZkb1VVMXNWVE5pZWtVd1ZGVldWR0Z0ZUhOa1ZFSjZWbXMxVUZSVk9VTmxWekV3VGtSYU5GVklUbmhNTWtZelZWVnZORlZGV1RCWmVsb3daV3hTZVZGc1ZsbFZNRFIzV2xSU1RHRlZXWHBUUjJkM1dsVXhWMk5JV1RKVFZGbzJVVzFzYzJSSGFFZFNSVTVzWVVoQ1UyRlZXalpaVmtKelZGVXhOazB3YUZwVGJYaE1VakphYmxKRk5VdGlNR2cxWVRCemVXUkZielJoTUZveldrWldSMkpyU2s1aU1uaFJXV3RrYjJWcVdrbFBSa0l5VGxSa2QwNUhVa1ZYYkZaT1QwYzVSV0Y2YUZWa01EVk9VV3hhUldScmNFbE5hWE16Vkc1dk1tVlhOVlZrVm1zeldXcEtWR05FVlhsaVJURlVXVmhLYVZaclNrdE5NV3hNVDBVME1sSXhTWGRXYkVadlVrWldhV0pzUlRST1NGWjNVV3BTTlZaVVNuaFdia3BoWkRKYWQxRlVUbmhQVkZJeVVUSXdNMVpzWXpCaE0xSjFVbGhGZUdKVVJtbGhia1l3WTBVMWJWUldSVGxRVTBselNXMWtjMkl5U21oaVJYUnNaVlZzYTBscWIybFpiVkpzV2xSVk1rNVVXWGRaTWxwcFRrUk9hazlYU1hsUFIwcHRUMVJvYkZsWFRtaGFiVVV5VGtSWmFXWlJQVDBpZlE9PSJ9
