apiVersion: kots.io/v1beta1
kind: License
metadata:
  name: typeexistingclusterenvairgappedphasenewinstallrbacminimalrbac
spec:
  appSlug: qakotsregression
  channelID: 1vs9nvnrMZ13Z6aYoB34XLBLr2m
  channelName: type=existing cluster, env=airgapped, phase=new install, rbac=minimal
    rbac
  customerName: type=existing cluster, env=airgapped, phase=new install, rbac=minimal
    rbac
  endpoint: https://replicated.app
  entitlements:
    bool_field_1:
      title: Boolean Field 1
      value: true
      valueType: Boolean
    expires_at:
      description: License Expiration
      title: Expiration
      value: ""
      valueType: String
    hidden_field_1:
      isHidden: true
      title: Hidden Field 1
      value: hide me updated
      valueType: String
    int_field_1:
      title: Integer Field 1
      value: 123
      valueType: Integer
    required_field_1:
      title: Required Field 1
      value: require me
      valueType: String
    str_field_1:
      title: String Field 1
      value: abc
      valueType: String
    txt_field_1:
      title: Text Field 1
      value: |-
        abc
        xyz
      valueType: Text
  isAirgapSupported: true
  isGitOpsSupported: true
  isNewKotsUiEnabled: true
  isSnapshotSupported: true
  licenseID: 1vsAXX5gvXKfBHqh9iigKZ0GisA
  licenseSequence: 9
  licenseType: prod
  signature: eyJsaWNlbnNlRGF0YSI6ImV5SmhjR2xXWlhKemFXOXVJam9pYTI5MGN5NXBieTkyTVdKbGRHRXhJaXdpYTJsdVpDSTZJa3hwWTJWdWMyVWlMQ0p0WlhSaFpHRjBZU0k2ZXlKdVlXMWxJam9pZEhsd1pXVjRhWE4wYVc1blkyeDFjM1JsY21WdWRtRnBjbWRoY0hCbFpIQm9ZWE5sYm1WM2FXNXpkR0ZzYkhKaVlXTnRhVzVwYldGc2NtSmhZeUo5TENKemNHVmpJanA3SW14cFkyVnVjMlZKUkNJNklqRjJjMEZZV0RWbmRsaExaa0pJY1dnNWFXbG5TMW93UjJselFTSXNJbXhwWTJWdWMyVlVlWEJsSWpvaWNISnZaQ0lzSW1OMWMzUnZiV1Z5VG1GdFpTSTZJblI1Y0dVOVpYaHBjM1JwYm1jZ1kyeDFjM1JsY2l3Z1pXNTJQV0ZwY21kaGNIQmxaQ3dnY0doaGMyVTlibVYzSUdsdWMzUmhiR3dzSUhKaVlXTTliV2x1YVcxaGJDQnlZbUZqSWl3aVlYQndVMngxWnlJNkluRmhhMjkwYzNKbFozSmxjM05wYjI0aUxDSmphR0Z1Ym1Wc1NVUWlPaUl4ZG5NNWJuWnVjazFhTVROYU5tRlpiMEl6TkZoTVFreHlNbTBpTENKamFHRnVibVZzVG1GdFpTSTZJblI1Y0dVOVpYaHBjM1JwYm1jZ1kyeDFjM1JsY2l3Z1pXNTJQV0ZwY21kaGNIQmxaQ3dnY0doaGMyVTlibVYzSUdsdWMzUmhiR3dzSUhKaVlXTTliV2x1YVcxaGJDQnlZbUZqSWl3aWJHbGpaVzV6WlZObGNYVmxibU5sSWpvNUxDSmxibVJ3YjJsdWRDSTZJbWgwZEhCek9pOHZjbVZ3YkdsallYUmxaQzVoY0hBaUxDSmxiblJwZEd4bGJXVnVkSE1pT25zaVltOXZiRjltYVdWc1pGOHhJanA3SW5ScGRHeGxJam9pUW05dmJHVmhiaUJHYVdWc1pDQXhJaXdpZG1Gc2RXVWlPblJ5ZFdVc0luWmhiSFZsVkhsd1pTSTZJa0p2YjJ4bFlXNGlmU3dpWlhod2FYSmxjMTloZENJNmV5SjBhWFJzWlNJNklrVjRjR2x5WVhScGIyNGlMQ0prWlhOamNtbHdkR2x2YmlJNklreHBZMlZ1YzJVZ1JYaHdhWEpoZEdsdmJpSXNJblpoYkhWbElqb2lJaXdpZG1Gc2RXVlVlWEJsSWpvaVUzUnlhVzVuSW4wc0ltaHBaR1JsYmw5bWFXVnNaRjh4SWpwN0luUnBkR3hsSWpvaVNHbGtaR1Z1SUVacFpXeGtJREVpTENKMllXeDFaU0k2SW1ocFpHVWdiV1VnZFhCa1lYUmxaQ0lzSW5aaGJIVmxWSGx3WlNJNklsTjBjbWx1WnlJc0ltbHpTR2xrWkdWdUlqcDBjblZsZlN3aWFXNTBYMlpwWld4a1h6RWlPbnNpZEdsMGJHVWlPaUpKYm5SbFoyVnlJRVpwWld4a0lERWlMQ0oyWVd4MVpTSTZNVEl6TENKMllXeDFaVlI1Y0dVaU9pSkpiblJsWjJWeUluMHNJbkpsY1hWcGNtVmtYMlpwWld4a1h6RWlPbnNpZEdsMGJHVWlPaUpTWlhGMWFYSmxaQ0JHYVdWc1pDQXhJaXdpZG1Gc2RXVWlPaUp5WlhGMWFYSmxJRzFsSWl3aWRtRnNkV1ZVZVhCbElqb2lVM1J5YVc1bkluMHNJbk4wY2w5bWFXVnNaRjh4SWpwN0luUnBkR3hsSWpvaVUzUnlhVzVuSUVacFpXeGtJREVpTENKMllXeDFaU0k2SW1GaVl5SXNJblpoYkhWbFZIbHdaU0k2SWxOMGNtbHVaeUo5TENKMGVIUmZabWxsYkdSZk1TSTZleUowYVhSc1pTSTZJbFJsZUhRZ1JtbGxiR1FnTVNJc0luWmhiSFZsSWpvaVlXSmpYRzU0ZVhvaUxDSjJZV3gxWlZSNWNHVWlPaUpVWlhoMEluMTlMQ0pwYzBGcGNtZGhjRk4xY0hCdmNuUmxaQ0k2ZEhKMVpTd2lhWE5IYVhSUGNITlRkWEJ3YjNKMFpXUWlPblJ5ZFdVc0ltbHpVMjVoY0hOb2IzUlRkWEJ3YjNKMFpXUWlPblJ5ZFdVc0ltbHpUbVYzUzI5MGMxVnBSVzVoWW14bFpDSTZkSEoxWlgxOSIsImlubmVyU2lnbmF0dXJlIjoiZXlKc2FXTmxibk5sVTJsbmJtRjBkWEpsSWpvaVVXZExlbTFPVkdsaU5FOUpZMU41YzFCd1RpdEZlakpOYm10MVowNWhVR05EYzNocEszWTFZV1J1UlZkSVpHVjFlRkJsZWxOTlkwSTRlalJ1TVVsbVVIWmtlbHAyZFdOSWQzQnVkR0phY3k5WU5qZ3JXblZhY1drcmFqQnlabUZ2UVhCVGNrTXhkMGczTVVZelQwNU9XakZHUzNCU05WQkJSMlY2UVVNdlpWa3lORnBJWkZKallqVXZPR2Q1YlZRNEsxUkdVR1UxYzFkdVQwTkljRkIyY2tWWVRsSkpXV0kxTWtwWFVuWXplaXM1ZWxwSlVtaDNNR3dyVGxGRFpWRnFORFF4YUVaTVdEWlNVM3BaYnpkSVJIQjRNMVpxYUdOV1ZqbFlSa0l6YTBSUVFVcG1OVzlIUzNaVU5VaFNZbU5IV1VkeWRGTlFTa2hxVkRSRFZWWnpSa040VERCVGFFbDJTako0VUVWeE1teHJZemswWXpKSmIydHFjM0oxVFhsNlpFaERhM0pKVjJ0bFJtWk9OVzVCZEdSeFJtTjBhRUZpTldNeGVFWjRSek5wV0d4b2JqTlFNRU5pVEhOa2VVWnRhMDhyTkRkUlBUMGlMQ0p3ZFdKc2FXTkxaWGtpT2lJdExTMHRMVUpGUjBsT0lGQlZRa3hKUXlCTFJWa3RMUzB0TFZ4dVRVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVGMWJGVktieXRLZFdsRVJtOW1kRkJ6TVhOMWFseHVhRmRrTjFsQlJYaHlja2h2WnpkVWIycERNR1Z4TVhCQmJGTlhSbEZ4WW1sbGVXTnVVVUU0Tm14V1VEaEhjV2t4YTJOeU5tazJUa0YwYTNST1RGRmpabHh1V1dsWFJIRkxNREoyZGxVM2FYUmxWVnBMWkZOa0swdFlabGhZVG13eE1rbHFUbXMxYkdRdlJGVnNNSGhTVlhOaEwwTm1VM1ZUUzJoaWQxTTNNSHByVTF4dU5FMUJhMHh1WmxSWlMzSnRjMmxoTUhjNFRVNVRaV3BHVVc1d1IwNUZhMVpsYzFsa1kyNWllV1puZGxsc1NIcHBLM0V5YkV0UVNtY3pOamt5TjJwT1NGeHVSV3A2Uld4TldtRnFSMnBFTkZjMmJsaFJNMVp1VmxZeFdVZHJNVnBqWkVwRWJXWXpTM0V5TUU1WGVESkdkemRWWlcxNllXMDBVQzlHV0c1eWMwaEZURnh1U1hGUk5YRmtSREJEYW5GbFJXSXJNWFZXTjA5cFNVeEthRUZFZFdGdFZWRjRhVGhXVTNOT2MxaHRlamxzUVRWUVFtTldjalJhY0hCTVQxWmpOMk5EZGx4dU5GRkpSRUZSUVVKY2JpMHRMUzB0UlU1RUlGQlZRa3hKUXlCTFJWa3RMUzB0TFZ4dUlpd2lhMlY1VTJsbmJtRjBkWEpsSWpvaVpYbEtlbUZYWkhWWldGSXhZMjFWYVU5cFNrWlhSbEowV1c1c1RGbHFaRXRVTWs1UlUyc3hNbGRXYUdwT2VscEVZVlZvVFU0d09VWk9SVTEyWldsMFZtVnRlRnBSTTA1RVl6QTFWMlF5Vm14bFZ6aHlWMjFhTkZOWWFHNVVha1V6VmpGV1JGTllRbFpVTUc4MVlrVlZkbFpyT1U1Vk1Fa3dXa2N4Y0ZKWFNqSmtNamxEVFVVeFZscEhSa1phVm13MVdURlZOV0pYYUhCVmJHaFNVbGRTWVU1RlJtdGhhMnd5VTBoQ2VscEhhelJpVjFZeFZEQndhVlZ1WkVsYVIzQjBWVVpTVmsxWGJFaFBWM1J6VFRGQ1RHUXlPVEZPTUhoVlltMDFWR0Y2VW1oaFJGSnJVakExU21OWFpIaFVNV3N4VFZWMFQwMXNTbHBsYW1SNFZtMUtlbGRXYkRGTU0yZDJZVzFTYVZOdVNuQlZSa1phV2pCWk1sUlVSWFpXYlRVMFZUQTVNRTR5WXpSa1JWWnVVbXBPYldKR1FsZFBSVEYwVFRCU1VtRkhSbmRhVjBZMVVrUktRMWRFWkd0aGJGcHhVMjF2Y21WRVJrWldWM1JOVWtoV1RWTkhjSFZpYWtwVlRVUmFNbUV3U2xsU1IxWnBaVlJDU1ZSRlJrOWFSRTQxVVc1VmVVOVhhM0phTVVseVpXcEdjMkV5TURKYWJFcHRZMjVKZG1KVmVHNVZWVFYxVGtac1ZsWkdTbkpoYldoYVUzazRNR05yVlhaVFJWWXdVakl4VEU5VlRqRmlWRXA1V1d4U2MxVlVRVE5oUm5CaFdsWk5NRnByUlRsUVUwbHpTVzFrYzJJeVNtaGlSWFJzWlZWc2EwbHFiMmxaYlZKc1dsUlZNazVVV1hkWk1scHBUa1JPYWs5WFNYbFBSMHB0VDFSb2JGbFhUbWhhYlVVeVRrUlphV1pSUFQwaWZRPT0ifQ==
