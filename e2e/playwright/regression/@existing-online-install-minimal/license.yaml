apiVersion: kots.io/v1beta1
kind: License
metadata:
  name: typeexistingclusterenvonlinephasenewinstallrbacminimalrbac
spec:
  appSlug: qakotsregression
  channelID: 1sAe2GvWv9eu8DEEoOf25z3u43n
  channelName: type=existing cluster, env=online, phase=new install, rbac=minimal
    rbac
  channels:
  - channelID: 1sAe2GvWv9eu8DEEoOf25z3u43n
    channelName: type=existing cluster, env=online, phase=new install, rbac=minimal
      rbac
    channelSlug: type-existing-cluster-env-on-2
    endpoint: https://replicated.app
    isDefault: true
    replicatedProxyDomain: proxy.replicated.com
  customerEmail: qakotsregression@replicated.com
  customerName: type=existing cluster, env=online, phase=new install, rbac=minimal
    rbac
  endpoint: https://replicated.app
  entitlements:
    bool_field_1:
      signature: {}
      title: Boolean Field 1
      value: true
      valueType: Boolean
    expires_at:
      description: License Expiration
      signature: {}
      title: Expiration
      value: ""
      valueType: String
    hidden_field_1:
      isHidden: true
      signature: {}
      title: Hidden Field 1
      value: hide me
      valueType: String
    int_field_1:
      signature: {}
      title: Integer Field 1
      value: 827
      valueType: Integer
    required_field_1:
      signature: {}
      title: Required Field 1
      value: require me
      valueType: String
    str_field_1:
      signature: {}
      title: String Field 1
      value: abc
      valueType: String
    txt_field_1:
      signature: {}
      title: Text Field 1
      value: |-
        abc
        xyz
      valueType: Text
  isGitOpsSupported: true
  isIdentityServiceSupported: true
  isKotsInstallEnabled: true
  isNewKotsUiEnabled: true
  isSnapshotSupported: true
  licenseID: 1sAePQcjBsmXOvsG5ArQvnBmiPh
  licenseSequence: 7008
  licenseType: prod
  replicatedProxyDomain: proxy.replicated.com
  signature: eyJsaWNlbnNlRGF0YSI6ImV5SmhjR2xXWlhKemFXOXVJam9pYTI5MGN5NXBieTkyTVdKbGRHRXhJaXdpYTJsdVpDSTZJa3hwWTJWdWMyVWlMQ0p0WlhSaFpHRjBZU0k2ZXlKdVlXMWxJam9pZEhsd1pXVjRhWE4wYVc1blkyeDFjM1JsY21WdWRtOXViR2x1WlhCb1lYTmxibVYzYVc1emRHRnNiSEppWVdOdGFXNXBiV0ZzY21KaFl5SjlMQ0p6Y0dWaklqcDdJbXhwWTJWdWMyVkpSQ0k2SWpGelFXVlFVV05xUW5OdFdFOTJjMGMxUVhKUmRtNUNiV2xRYUNJc0lteHBZMlZ1YzJWVWVYQmxJam9pY0hKdlpDSXNJbU4xYzNSdmJXVnlUbUZ0WlNJNkluUjVjR1U5WlhocGMzUnBibWNnWTJ4MWMzUmxjaXdnWlc1MlBXOXViR2x1WlN3Z2NHaGhjMlU5Ym1WM0lHbHVjM1JoYkd3c0lISmlZV005YldsdWFXMWhiQ0J5WW1Gaklpd2lZM1Z6ZEc5dFpYSkZiV0ZwYkNJNkluRmhhMjkwYzNKbFozSmxjM05wYjI1QWNtVndiR2xqWVhSbFpDNWpiMjBpTENKaGNIQlRiSFZuSWpvaWNXRnJiM1J6Y21WbmNtVnpjMmx2YmlJc0ltTm9ZVzV1Wld4SlJDSTZJakZ6UVdVeVIzWlhkamxsZFRoRVJVVnZUMll5TlhvemRUUXpiaUlzSW1Ob1lXNXVaV3hPWVcxbElqb2lkSGx3WlQxbGVHbHpkR2x1WnlCamJIVnpkR1Z5TENCbGJuWTliMjVzYVc1bExDQndhR0Z6WlQxdVpYY2dhVzV6ZEdGc2JDd2djbUpoWXoxdGFXNXBiV0ZzSUhKaVlXTWlMQ0pqYUdGdWJtVnNjeUk2VzNzaVkyaGhibTVsYkVsRUlqb2lNWE5CWlRKSGRsZDJPV1YxT0VSRlJXOVBaakkxZWpOMU5ETnVJaXdpWTJoaGJtNWxiRk5zZFdjaU9pSjBlWEJsTFdWNGFYTjBhVzVuTFdOc2RYTjBaWEl0Wlc1MkxXOXVMVElpTENKamFHRnVibVZzVG1GdFpTSTZJblI1Y0dVOVpYaHBjM1JwYm1jZ1kyeDFjM1JsY2l3Z1pXNTJQVzl1YkdsdVpTd2djR2hoYzJVOWJtVjNJR2x1YzNSaGJHd3NJSEppWVdNOWJXbHVhVzFoYkNCeVltRmpJaXdpYVhORVpXWmhkV3gwSWpwMGNuVmxMQ0psYm1Sd2IybHVkQ0k2SW1oMGRIQnpPaTh2Y21Wd2JHbGpZWFJsWkM1aGNIQWlMQ0p5WlhCc2FXTmhkR1ZrVUhKdmVIbEViMjFoYVc0aU9pSndjbTk0ZVM1eVpYQnNhV05oZEdWa0xtTnZiU0o5WFN3aWJHbGpaVzV6WlZObGNYVmxibU5sSWpvM01EQTRMQ0psYm1Sd2IybHVkQ0k2SW1oMGRIQnpPaTh2Y21Wd2JHbGpZWFJsWkM1aGNIQWlMQ0p5WlhCc2FXTmhkR1ZrVUhKdmVIbEViMjFoYVc0aU9pSndjbTk0ZVM1eVpYQnNhV05oZEdWa0xtTnZiU0lzSW1WdWRHbDBiR1Z0Wlc1MGN5STZleUppYjI5c1gyWnBaV3hrWHpFaU9uc2lkR2wwYkdVaU9pSkNiMjlzWldGdUlFWnBaV3hrSURFaUxDSjJZV3gxWlNJNmRISjFaU3dpZG1Gc2RXVlVlWEJsSWpvaVFtOXZiR1ZoYmlJc0luTnBaMjVoZEhWeVpTSTZlMzE5TENKbGVIQnBjbVZ6WDJGMElqcDdJblJwZEd4bElqb2lSWGh3YVhKaGRHbHZiaUlzSW1SbGMyTnlhWEIwYVc5dUlqb2lUR2xqWlc1elpTQkZlSEJwY21GMGFXOXVJaXdpZG1Gc2RXVWlPaUlpTENKMllXeDFaVlI1Y0dVaU9pSlRkSEpwYm1jaUxDSnphV2R1WVhSMWNtVWlPbnQ5ZlN3aWFHbGtaR1Z1WDJacFpXeGtYekVpT25zaWRHbDBiR1VpT2lKSWFXUmtaVzRnUm1sbGJHUWdNU0lzSW5aaGJIVmxJam9pYUdsa1pTQnRaU0lzSW5aaGJIVmxWSGx3WlNJNklsTjBjbWx1WnlJc0ltbHpTR2xrWkdWdUlqcDBjblZsTENKemFXZHVZWFIxY21VaU9udDlmU3dpYVc1MFgyWnBaV3hrWHpFaU9uc2lkR2wwYkdVaU9pSkpiblJsWjJWeUlFWnBaV3hrSURFaUxDSjJZV3gxWlNJNk9ESTNMQ0oyWVd4MVpWUjVjR1VpT2lKSmJuUmxaMlZ5SWl3aWMybG5ibUYwZFhKbElqcDdmWDBzSW5KbGNYVnBjbVZrWDJacFpXeGtYekVpT25zaWRHbDBiR1VpT2lKU1pYRjFhWEpsWkNCR2FXVnNaQ0F4SWl3aWRtRnNkV1VpT2lKeVpYRjFhWEpsSUcxbElpd2lkbUZzZFdWVWVYQmxJam9pVTNSeWFXNW5JaXdpYzJsbmJtRjBkWEpsSWpwN2ZYMHNJbk4wY2w5bWFXVnNaRjh4SWpwN0luUnBkR3hsSWpvaVUzUnlhVzVuSUVacFpXeGtJREVpTENKMllXeDFaU0k2SW1GaVl5SXNJblpoYkhWbFZIbHdaU0k2SWxOMGNtbHVaeUlzSW5OcFoyNWhkSFZ5WlNJNmUzMTlMQ0owZUhSZlptbGxiR1JmTVNJNmV5SjBhWFJzWlNJNklsUmxlSFFnUm1sbGJHUWdNU0lzSW5aaGJIVmxJam9pWVdKalhHNTRlWG9pTENKMllXeDFaVlI1Y0dVaU9pSlVaWGgwSWl3aWMybG5ibUYwZFhKbElqcDdmWDE5TENKcGMwZHBkRTl3YzFOMWNIQnZjblJsWkNJNmRISjFaU3dpYVhOSlpHVnVkR2wwZVZObGNuWnBZMlZUZFhCd2IzSjBaV1FpT25SeWRXVXNJbWx6VTI1aGNITm9iM1JUZFhCd2IzSjBaV1FpT25SeWRXVXNJbWx6VG1WM1MyOTBjMVZwUlc1aFlteGxaQ0k2ZEhKMVpTd2lhWE5MYjNSelNXNXpkR0ZzYkVWdVlXSnNaV1FpT25SeWRXVjlmUT09IiwiaW5uZXJTaWduYXR1cmUiOiJleUpzYVdObGJuTmxVMmxuYm1GMGRYSmxJam9pUWpsTVkxaDZlSEZMVERSUGJWZHZkREpDU21WMmNsazJhbXMwZUdoS05VdFRMM2hpYWxGdVUxcFhkVFU0V1RONFNFOTZWVm94TDFaVlYxWmFkMUZSUW05YWJGbHNLemxoZG5FMlZtdGlhMGd2YTBGc1NtTm5Wa1p5UVc1aGVGVlJhRkptZFdGQmJHc3JTRms0SzI1UGRUaDRWMU5CTm1OUGFtMU1SM1IyY0hGWlJFWkhVMnMzYVZwMmRFVldlbEUzUVhSNGNIQXhNVlJpYUM5M1MzWlpTbGhtYlRZMFEwdE5hVEkwUzJ0eVpXb3dNVGRXVTIxVldrbGlZMFpoVWpFeVl6SjZXbVJxUTI1cmFsbG5RMGMzV2l0UGFXeEJTMnhFUjJ0dWRqVjZLemRDTlM5S2JFUjBUeXRvWWxneVdFbFZZWEJJY1N0RGQyTTFUMkp3V0d0aVVFczJjMGxvVldrelNEZFFZak0xUmxwak0wMU9MelV4YjB4TWQwZEZSMDgyUkZoV1l6Wk1VV2RFTm1wRU5qaFdVRlZuUWtOM05tbEJiM2MxWWxsa1dIbHphMWhMVG5Ob1EwSjFaek13WjJJeE9GazBSbVYzUFQwaUxDSndkV0pzYVdOTFpYa2lPaUl0TFMwdExVSkZSMGxPSUZCVlFreEpReUJMUlZrdExTMHRMVnh1VFVsSlFrbHFRVTVDWjJ0eGFHdHBSemwzTUVKQlVVVkdRVUZQUTBGUk9FRk5TVWxDUTJkTFEwRlJSVUYxYkZWS2J5dEtkV2xFUm05bWRGQnpNWE4xYWx4dWFGZGtOMWxCUlhoeWNraHZaemRVYjJwRE1HVnhNWEJCYkZOWFJsRnhZbWxsZVdOdVVVRTRObXhXVURoSGNXa3hhMk55Tm1rMlRrRjBhM1JPVEZGalpseHVXV2xYUkhGTE1ESjJkbFUzYVhSbFZWcExaRk5rSzB0WVpsaFlUbXd4TWtscVRtczFiR1F2UkZWc01IaFNWWE5oTDBObVUzVlRTMmhpZDFNM01IcHJVMXh1TkUxQmEweHVabFJaUzNKdGMybGhNSGM0VFU1VFpXcEdVVzV3UjA1RmExWmxjMWxrWTI1aWVXWm5kbGxzU0hwcEszRXliRXRRU21jek5qa3lOMnBPU0Z4dVJXcDZSV3hOV21GcVIycEVORmMyYmxoUk0xWnVWbFl4V1Vkck1WcGpaRXBFYldZelMzRXlNRTVYZURKR2R6ZFZaVzE2WVcwMFVDOUdXRzV5YzBoRlRGeHVTWEZSTlhGa1JEQkRhbkZsUldJck1YVldOMDlwU1V4S2FFRkVkV0Z0VlZGNGFUaFdVM05PYzFodGVqbHNRVFZRUW1OV2NqUmFjSEJNVDFaak4yTkRkbHh1TkZGSlJFRlJRVUpjYmkwdExTMHRSVTVFSUZCVlFreEpReUJMUlZrdExTMHRMVnh1SWl3aWEyVjVVMmxuYm1GMGRYSmxJam9pWlhsS2VtRlhaSFZaV0ZJeFkyMVZhVTlwU2tsTk0wVjJVbnBHVEVzeFRuVlVWbEpTVVRBNU0yRnFaRnBUUjFWeVUxY3hjazVHU1RCV1ZscFpWbTVDZFU1SFNrNWphazVDVFZjME5XTXdjRkZrYTNoclZVVldlbHA2UW5OV1JFb3lXbFpCTkU0eGJGaGFSM2N3WWxkT1dsb3lkelJOTVd4RVZqQjBhMk5yZUhCU2VrWnhUV3BzV2xveGFIcGxWVlpRVWxkV01WVXdVa2ROUlZaaFpXMXNOR1JyZEVWUlZXd3pUakZXVjJKR1NuZFBWVVpEV2taUmRtSnRkRWRqYVhSSlRsZHNiVkZxVVhKVVJYaHFaR3BSZUZKVmJHcFNWV2Q0WlZWbmRsWXpVakphYlRSNldWaFNiV0ZYZUZoWmEyZDRWRVZXTlZGdVNuTlhSbEpPVmpOYWRHSlVVa05aYW1zelRsUkdSMlJxU2s5U2VsWXdaRzFvV2xrd1draGxWRkpNVjFoSmQyTXdkR3RoUm14cVUyMDVZVmRyZEc5UmEwVjJUMWhvTkdGdVFtOVdWbEpZWWxoU05HUlZVVFJqTWpGWlZUQjBlR0pZY0hsbFJHdDVaVzVHYUZwc1dsTk9iR2hzVGtWSmQxVXpRbXBXVldSSVdsVjBSVnB0T1haV1JWcEVZVVp3VGxrd1drbFVWWGhFV1RJeGJHTXlXWGxOYmxwT1lVZEtkRkp0VWt0WmFYUk9WbTVDVldScVRYaE9WMUpVVGxac1JWSnVRakZqZW14UVZrWmtkMDFyYUhoVWJFSXdUVzB4U21OV1RuUk5SV041WWxkV01rNUlZemxRVTBselNXMWtjMkl5U21oaVJYUnNaVlZzYTBscWIybFpiVkpzV2xSVk1rNVVXWGRaTWxwcFRrUk9hazlYU1hsUFIwcHRUMVJvYkZsWFRtaGFiVVV5VGtSWmFXWlJQVDBpZlE9PSJ9
