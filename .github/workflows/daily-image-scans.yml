name: Container Security Scans

on:
  schedule:
    - cron: '0 0 * * *'  # Runs nightly at midnight (UTC)
  workflow_dispatch:      # Allows manual triggering through GitHub UI

permissions: {}  # Remove all permissions by default

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-latest-tag:
    name: Get Latest Release Tag
    runs-on: ubuntu-latest
    permissions:
      contents: read    # Needed to read releases
    outputs:
      tag_name: ${{ steps.get_release.outputs.tag_name }}
    steps:
      - name: Get latest release
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            core.setOutput('tag_name', release.data.tag_name);

  scan-kotsadm:
    name: Scan Kotsadm
    needs: get-latest-tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - uses: actions/checkout@v4
      - name: Verify image access
        run: |
          if ! docker pull kotsadm/kotsadm:${{ needs.get-latest-tag.outputs.tag_name }}; then
            echo "::error::Failed to pull image kotsadm/kotsadm:${{ needs.get-latest-tag.outputs.tag_name }}"
            exit 1
          fi
      - uses: ./.github/actions/scan-image
        with:
          category-prefix: image-scan-
          fail-build: 'false'
          image-ref: kotsadm/kotsadm:${{ needs.get-latest-tag.outputs.tag_name }}
          only-fixed: 'true'
          output-file: 'kotsadm-scan-output.sarif'
          retention-days: '90'
          severity-cutoff: negligible
          upload-sarif: 'true'

  scan-kotsadm-migrations:
    name: Scan Kotsadm Migrations
    needs: get-latest-tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - uses: actions/checkout@v4
      - name: Verify image access
        run: |
          if ! docker pull kotsadm/kotsadm-migrations:${{ needs.get-latest-tag.outputs.tag_name }}; then
            echo "::error::Failed to pull image kotsadm/kotsadm-migrations:${{ needs.get-latest-tag.outputs.tag_name }}"
            exit 1
          fi
      - uses: ./.github/actions/scan-image
        with:
          category-prefix: image-scan-
          fail-build: 'false'
          image-ref: kotsadm/kotsadm-migrations:${{ needs.get-latest-tag.outputs.tag_name }}
          only-fixed: 'true'
          output-file: 'kotsadm-migration-scan-output.sarif'
          retention-days: '90'
          severity-cutoff: negligible
          upload-sarif: 'true'

  scan-kurl-proxy:
    name: Scan Kurl Proxy
    needs: get-latest-tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - uses: actions/checkout@v4
      - name: Verify image access
        run: |
          if ! docker pull kotsadm/kurl-proxy:${{ needs.get-latest-tag.outputs.tag_name }}; then
            echo "::error::Failed to pull image kotsadm/kurl-proxy:${{ needs.get-latest-tag.outputs.tag_name }}"
            exit 1
          fi
      - uses: ./.github/actions/scan-image
        with:
          category-prefix: image-scan-
          fail-build: 'false'
          image-ref: kotsadm/kurl-proxy:${{ needs.get-latest-tag.outputs.tag_name }}
          only-fixed: 'true'
          output-file: 'kurl-proxy-scan-output.sarif'
          retention-days: '90'
          severity-cutoff: negligible
          upload-sarif: 'true'

  scan-rqlite:
    name: Scan Rqlite
    needs: get-latest-tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - uses: actions/checkout@v4
      - name: Verify image access
        run: |
          if ! docker pull kotsadm/rqlite:${{ needs.get-latest-tag.outputs.tag_name }}; then
            echo "::error::Failed to pull image kotsadm/rqlite:${{ needs.get-latest-tag.outputs.tag_name }}"
            exit 1
          fi
      - uses: ./.github/actions/scan-image
        with:
          category-prefix: image-scan-
          fail-build: 'false'
          image-ref: kotsadm/rqlite:${{ needs.get-latest-tag.outputs.tag_name }}
          only-fixed: 'true'
          output-file: 'rqlite-scan-output.sarif'
          retention-days: '90'
          severity-cutoff: negligible
          upload-sarif: 'true'

  scan-minio:
    name: Scan Minio
    needs: get-latest-tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - uses: actions/checkout@v4
      - name: Verify image access
        run: |
          if ! docker pull kotsadm/minio:${{ needs.get-latest-tag.outputs.tag_name }}; then
            echo "::error::Failed to pull image kotsadm/minio:${{ needs.get-latest-tag.outputs.tag_name }}"
            exit 1
          fi
      - uses: ./.github/actions/scan-image
        with:
          category-prefix: image-scan-
          fail-build: 'false'
          image-ref: kotsadm/minio:${{ needs.get-latest-tag.outputs.tag_name }}
          only-fixed: 'true'
          output-file: 'minio-scan-output.sarif'
          retention-days: '90'
          severity-cutoff: negligible
          upload-sarif: 'true'

  scan-dex:
    name: Scan Dex
    needs: get-latest-tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - uses: actions/checkout@v4
      - name: Verify image access
        run: |
          if ! docker pull kotsadm/dex:${{ needs.get-latest-tag.outputs.tag_name }}; then
            echo "::error::Failed to pull image kotsadm/dex:${{ needs.get-latest-tag.outputs.tag_name }}"
            exit 1
          fi
      - uses: ./.github/actions/scan-image
        with:
          category-prefix: image-scan-
          fail-build: 'false'
          image-ref: kotsadm/dex:${{ needs.get-latest-tag.outputs.tag_name }}
          only-fixed: 'true'
          output-file: 'dex-scan-output.sarif'
          retention-days: '90'
          severity-cutoff: negligible
          upload-sarif: 'true'

  scan-local-volume-provider:
    name: Scan Local Volume Provider
    needs: get-latest-tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - uses: actions/checkout@v4
      - name: Verify image access
        run: |
          if ! docker pull replicated/local-volume-provider:${{ needs.get-latest-tag.outputs.tag_name }}; then
            echo "::error::Failed to pull image replicated/local-volume-provider:${{ needs.get-latest-tag.outputs.tag_name }}"
            exit 1
          fi
      - uses: ./.github/actions/scan-image
        with:
          category-prefix: image-scan-
          fail-build: 'false'
          image-ref: replicated/local-volume-provider:${{ needs.get-latest-tag.outputs.tag_name }}
          only-fixed: 'true'
          output-file: 'local-volume-provider-scan-output.sarif'
          retention-days: '90'
          severity-cutoff: negligible
          upload-sarif: 'true'