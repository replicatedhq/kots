name: integration-test-parallel
on:
  push:
    branches:
      - "automated-test-regression"
jobs:
  create-jumpbox:
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:1.0.6
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_AVAILABILITY_ZONE: us-east2a
      AWS_ACCESS_KEY_ID: ${{ secrets.E2E_TESTIM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_TESTIM_AWS_SECRET_ACCESS_KEY }}
      TF_VAR_testim_token: ${{ secrets.TESTIM_ACCESS_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: replicatedhq/kots-regression-automation
          token: ${{ secrets.E2E_GH_PAT }}
          path: automation
          ref: main
      - name: Create Jumpbox Environment
        working-directory: automation/jumpbox
        run: |
          terraform init
          terraform plan
  testim-terraform-airgap-install:
    needs: create-jumpbox
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:1.0.6
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_AVAILABILITY_ZONE: us-east2a
      AWS_ACCESS_KEY_ID: ${{ secrets.E2E_TESTIM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_TESTIM_AWS_SECRET_ACCESS_KEY }}
      TF_VAR_testim_token: ${{ secrets.TESTIM_ACCESS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: replicatedhq/kots-regression-automation
          token: ${{ secrets.E2E_GH_PAT }}
          path: automation
          ref: main
      - name: Get Jumpbox Public Ip
        working-directory: automation/jumpbox
        run: |
          export JUMPBOX_IP=$(terraform output jumpbox_ip_private | tr -d '"')
          echo JUMPBOX_IP=$JUMPBOX_IP >> $GITHUB_ENV
      - name: Test Jumpbox Public Ip
        run: |
          echo $JUMPBOX_IP
      - name: Create Test Environment for Embedded AirGapped Install
        working-directory: automation/cluster
        run: |
        echo `TODO: terraform init`
        echo `TODO: ./embedded-airgapped-install.sh apply`

      - name: Run testim for Embedded AirGapped Install
        working-directory: automation/cluster
        run: |
          echo 'TODO: Run Testim'

      - name: Cleanup Test Environment for Embedded AirGapped Install
        if: ${{ always() }}
        working-directory: automation/cluster
        run: |
          echo `TODO: ./embedded-airgapped-install.sh destroy`
      
      - name: Cleanup Test Environment for Embedded AirGapped Upgrade
        working-directory: automation/cluster
        run: |
          terraform init
          ./embedded-airgapped-upgrade.sh destroy

      - name: Cleanup Jumpbox Environment
        if: ${{ always() }}
        working-directory: automation/jumpbox
        run: |
          terraform destroy --auto-approve           
  destroy-jumpbox:
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:1.0.6
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_AVAILABILITY_ZONE: us-east2a
      AWS_ACCESS_KEY_ID: ${{ secrets.E2E_TESTIM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_TESTIM_AWS_SECRET_ACCESS_KEY }}
      TF_VAR_testim_token: ${{ secrets.TESTIM_ACCESS_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: replicatedhq/kots-regression-automation
          token: ${{ secrets.E2E_GH_PAT }}
          path: automation
          ref: main
      - name: Create Jumpbox Environment
        working-directory: automation/jumpbox
        run: |
          terraform init
          echo 'terraform destroy --auto-approve`      
