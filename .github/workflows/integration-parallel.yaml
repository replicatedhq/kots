name: integration-test-parallel
on:
  push:
    branches:
      - "automated-test-regression"
jobs:
  create-jumpbox:
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:1.0.6
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_AVAILABILITY_ZONE: us-east2a
      AWS_ACCESS_KEY_ID: ${{ secrets.E2E_TESTIM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_TESTIM_AWS_SECRET_ACCESS_KEY }}
      TF_VAR_testim_token: ${{ secrets.TESTIM_ACCESS_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: replicatedhq/kots-regression-automation
          token: ${{ secrets.E2E_GH_PAT }}
          path: automation
          ref: main
      - name: Create Jumpbox Environment
        working-directory: automation/jumpbox
        run: |
          terraform init
          terraform apply
  testim-terraform-airgap-install:
    needs: create-jumpbox
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:1.0.6
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_AVAILABILITY_ZONE: us-east2a
      AWS_ACCESS_KEY_ID: ${{ secrets.E2E_TESTIM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_TESTIM_AWS_SECRET_ACCESS_KEY }}
      TF_VAR_testim_token: ${{ secrets.TESTIM_ACCESS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: replicatedhq/kots-regression-automation
          token: ${{ secrets.E2E_GH_PAT }}
          path: automation
          ref: main
      - name: Create Test Environment for Embedded AirGapped Install
        working-directory: automation/cluster
        run: |
        terraform init -backend-config embedded-airgapped-install-backend-config.tfvars
        ./embedded-airgapped-install.sh apply
  testim-testim-airgap-install:
    needs: testim-terraform-airgap-install
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:1.0.6
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_AVAILABILITY_ZONE: us-east2a
      AWS_ACCESS_KEY_ID: ${{ secrets.E2E_TESTIM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_TESTIM_AWS_SECRET_ACCESS_KEY }}
      TF_VAR_testim_token: ${{ secrets.TESTIM_ACCESS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: replicatedhq/kots-regression-automation
          token: ${{ secrets.E2E_GH_PAT }}
          path: automation
          ref: main
      - name: Set Jumpbox Public Ip
        working-directory: automation/jumpbox
        run: |
          terraform init
          export JUMPBOX_IP=$(terraform output jumpbox_ip_public -raw)
          echo JUMPBOX_IP=$JUMPBOX_IP >> $GITHUB_ENV
      - name: Create Test Environment for Embedded AirGapped Install
        working-directory: automation/cluster
        run: |
          terraform init -backend-config embedded-airgapped-install-backend-config.tfvars
          export EMBEDDED_AIRGAP_INSTALL_IP=$(terraform output -raw control_plane_private_ip)
          echo EMBEDDED_AIRGAP_INSTALL_IP=$EMBEDDED_AIRGAP_INSTALL_IP >> $GITHUB_ENV
      - name: Create Test Environment for Embedded AirGapped Install
        working-directory: automation/cluster
        run: |
          ssh -i ssh.pem ubuntu@$JUMPBOX_IP -oStrictHostKeyChecking=no <<EOT
          ssh ubuntu@$EMBEDDED_AIRGAP_INSTALL_IP "sudo bash /tmp/start.sh"
          EOT
  testim-cleanup-airgap-install:
    if: ${{ always() }}
    needs: testim-testim-airgap-install
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:1.0.6
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_AVAILABILITY_ZONE: us-east2a
      AWS_ACCESS_KEY_ID: ${{ secrets.E2E_TESTIM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_TESTIM_AWS_SECRET_ACCESS_KEY }}
      TF_VAR_testim_token: ${{ secrets.TESTIM_ACCESS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: replicatedhq/kots-regression-automation
          token: ${{ secrets.E2E_GH_PAT }}
          path: automation
          ref: main
      - name: Cleanup Test Environment for Embedded AirGapped Install
        working-directory: automation/cluster
        run: |
        terraform init -backend-config embedded-airgapped-install-backend-config.tfvars
        ./embedded-airgapped-install.sh destroy
   
  destroy-jumpbox:
    if: ${{ always() }}
    runs-on: ubuntu-20.04
    needs: [ testim-cleanup-airgap-install ]
    container:
      image: hashicorp/terraform:1.0.6
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_AVAILABILITY_ZONE: us-east2a
      AWS_ACCESS_KEY_ID: ${{ secrets.E2E_TESTIM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_TESTIM_AWS_SECRET_ACCESS_KEY }}
      TF_VAR_testim_token: ${{ secrets.TESTIM_ACCESS_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: replicatedhq/kots-regression-automation
          token: ${{ secrets.E2E_GH_PAT }}
          path: automation
          ref: main
      - name: Delete Jumpbox Environment
        working-directory: automation/jumpbox
        run: |
          terraform init
          terraform destroy --auto-approve    
