name: Scan Container Image

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
        description: 'Container image to scan (format: image:tag)'
      severity-cutoff:
        required: false
        type: string
        default: 'low'
        description: 'Minimum severity to report (critical, high, medium, low, negligible)'
      fail-build:
        required: false
        type: boolean
        default: false
        description: 'Fail the workflow if vulnerabilities are found'

permissions: {}  # Remove all permissions by default

jobs:
  scan:
    name: Scan Image
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Default timeout for the job
    permissions:
      security-events: write  # Needed to upload SARIF results
      contents: read         # Needed to read workflow files
    
    steps:
      - name: Extract image details
        id: image_details
        run: |
          IMAGE_NAME=$(echo "${{ inputs.image }}" | cut -d':' -f1)
          IMAGE_TAG=$(echo "${{ inputs.image }}" | cut -d':' -f2)
          [[ "$IMAGE_TAG" == "$IMAGE_NAME" ]] && IMAGE_TAG="latest"
          SAFE_NAME=$(echo "${IMAGE_NAME}-${IMAGE_TAG}" | sed 's/[\/:]/-/g')
          {
            echo "image_name=${IMAGE_NAME}"
            echo "image_tag=${IMAGE_TAG}"
            echo "safe_name=${SAFE_NAME}"
          } >> "$GITHUB_OUTPUT"
      
      - name: Scan image with Anchore
        uses: anchore/scan-action@v6
        id: scan
        with:
          image: "${{ inputs.image }}"
          fail-build: "${{ inputs.fail-build }}"
          severity-cutoff: "${{ inputs.severity-cutoff }}"
          output-format: sarif
      
      - name: Enrich SARIF with image metadata
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          
          jq --arg imageRef "${{ inputs.image }}" \
             --arg repo "${{ steps.image_details.outputs.image_name }}" \
             --arg name "${{ steps.image_details.outputs.image_name }}" \
             --arg tag "${{ steps.image_details.outputs.image_tag }}" \
             --arg scanTime "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
             '.runs[0].properties = {
                "imageRef": $imageRef,
                "repository": $repo,
                "scanTime": $scanTime,
                "imageMetadata": {
                  "name": $name,
                  "tag": $tag
                }
              }' results.sarif > enriched-results.sarif
          
          mv enriched-results.sarif results.sarif
      
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          category: "container-scan-${{ steps.image_details.outputs.safe_name }}"
      
      - name: Archive scan results
        uses: actions/upload-artifact@v4
        with:
          name: "sarif-${{ steps.image_details.outputs.safe_name }}"
          path: results.sarif
          retention-days: 90 