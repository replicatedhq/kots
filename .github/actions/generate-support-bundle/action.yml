name: 'Generate Support Bundle'
description: 'Composite action for generating a support bundle'
inputs:
  artifact-name:
    description: 'Name of the artifact to be uploaded'
    required: true
  kots-namespace:
    description: 'KOTS namespace'
    required: true
runs:
  using: "composite"
  steps:
    - id: generate-support-bundle
      env:
        KOTS_NAMESPACE: ${{ inputs.kots-namespace }}
      run: |
        RELEASE="$(
          curl -sfL https://api.github.com/repos/replicatedhq/troubleshoot/releases/latest | \
          grep '"tag_name":' | \
          sed -E 's/.*"(v[^"]+)".*/\1/'
        )"
        curl -fsLO "https://github.com/replicatedhq/troubleshoot/releases/download/${RELEASE}/support-bundle_linux_amd64.tar.gz"
        tar xzf support-bundle_linux_amd64.tar.gz
        ./support-bundle https://kots.io
        BUNDLE="$(ls -1 | grep 'support-bundle-.*.tar.gz')"
        echo "bundle-name=$BUNDLE" >> "$GITHUB_OUTPUT"
      shell: bash

    - id: upload-support-bundle
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ steps.generate-support-bundle.outputs.bundle-name }}

    - name: Print instructions
      if: ${{ steps.upload-support-bundle.outputs.artifact-url != '' }}
      run: |
        echo -e "\e[1;33m┌──────────────────────────────────────────────────────────────────────────────────────────────────────┐\e[0m"
        echo -e "\e[1;33m                            To analyze the support bundle:                                              \e[0m"
        echo -e "\e[1;33m                                                                                                        \e[0m"
        echo -e "\e[1;33m   1- Download & extract the support bundle from:                                                       \e[0m"
        echo -e "\e[1;33m                                                                                                        \e[0m"
        echo -e "\e[1;34m      ${{ steps.upload-support-bundle.outputs.artifact-url }}                                           \e[0m"
        echo -e "\e[1;33m                                                                                                        \e[0m"
        echo -e "\e[1;33m   2- Install sbctl CLI from:                                                                           \e[0m"
        echo -e "\e[1;33m                                                                                                        \e[0m"
        echo -e "\e[1;34m      https://github.com/replicatedhq/sbctl                                                             \e[0m"
        echo -e "\e[1;33m                                                                                                        \e[0m"
        echo -e "\e[1;33m   3- From inside the extracted directory, run:                                                         \e[0m"
        echo -e "\e[1;33m                                                                                                        \e[0m"
        echo -e "\e[1;32m      sbctl serve -s .                                                                                  \e[0m"
        echo -e "\e[1;33m                                                                                                        \e[0m"
        echo -e "\e[1;33m   4- Export the printed kubeconfig to interact with the cluster.                                       \e[0m"
        echo -e "\e[1;33m                                                                                                        \e[0m"
        echo -e "\e[1;33m└──────────────────────────────────────────────────────────────────────────────────────────────────────┘\e[0m"
      shell: bash
