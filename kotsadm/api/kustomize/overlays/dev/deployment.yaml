apiVersion: apps/v1
kind: Deployment
metadata:
  name: kotsadm-api
spec:
  template:
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: kotsadm-api
          env:
            - name: DEV_NAMESPACE
              value: "test"
            - name: LOG_LEVEL
              value: debug
            - name: SESSION_KEY
              value: this-is-not-too-secret
            - name: POSTGRES_URI
              valueFrom:
                secretKeyRef:
                  name: ship-postgres   # This secret is created in the ship-cluster-db project
                  key: uri
            - name: API_ENCRYPTION_KEY
              value: IvWItkB8+ezMisPjSMBknT1PdKjBx7Xc/txZqOP8Y2Oe7+Jy
            - name: PINO_LOG_PRETTY
              value: "1"
            - name: S3_BUCKET_NAME
              value: "shipbucket"
            - name: S3_ENDPOINT
              value: http://kotsadm-s3.default.svc.cluster.local:4569/
            - name: S3_ACCESS_KEY_ID
              value: not-a-key
            - name: S3_SECRET_ACCESS_KEY
              value: not-a-secret
            - name: S3_BUCKET_ENDPOINT
              value: "true"
            - name: SHIP_API_ENDPOINT
              value: http://kotsadm-api.default.svc.cluster.local:3000
            - name: SHIP_API_ADVERTISE_ENDPOINT
              value: http://127.0.0.1:30065
            - name: GRAPHQL_PREM_ENDPOINT
              value: http://graphql-api-prem:3000/graphql
            - name: AUTO_CREATE_CLUSTER
              value: "1"
            - name: AUTO_CREATE_CLUSTER_NAME
              value: "microk8s"
            - name: AUTO_CREATE_CLUSTER_TOKEN
              value: this-is-definitely-not-a-secret
            - name: ENABLE_KURL
              value: "1"
            - name: SHARED_PASSWORD_BCRYPT
              value: $2a$10$xZRsZCYgRDG90N1QEjBxGOBDrDGE.rpcMENV4qNNo7pozYTEPGMwS
            # - name: STORAGE_BASEURI
            #   value: "docker://kotsadm-storage-registry:5000"
            # - name: STORAGE_BASEURI_PLAINHTTP
            #   value: "true"
          volumeMounts:
            - name: kubelet-client-cert
              mountPath: /etc/kubernetes/pki/kubelet
      volumes:
        - name: kubelet-client-cert
          secret:
            secretName: kubelet-client-cert
            optional: true
