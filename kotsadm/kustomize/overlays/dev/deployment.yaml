apiVersion: apps/v1
kind: Deployment
metadata:
  name: kotsadm
spec:
  template:
    metadata:
      labels:
        kots.io/kotsadm: 'true'
        kots.io/backup: velero
      annotations:
        backup.velero.io/backup-volumes: backup
        pre.hook.backup.velero.io/command: '["/bin/bash", "-c", "PGPASSWORD=password pg_dump -U kotsadm -h kotsadm-postgres > /backup/kotsadm-postgres.sql"]'
        pre.hook.backup.velero.io/timeout: 3m
    spec:
      containers:
        - name: kotsadm
          volumeMounts:
            - mountPath: /backup
              name: backup
            - name: kubelet-client-cert
              mountPath: /etc/kubernetes/pki/kubelet
          env:
            - name: KOTSADM_LOG_LEVEL
              value: "debug"
            - name: DISABLE_SPA_SERVING
              value: "1"
            - name: KOTSADM_TARGET_NAMESPACE
              value: "test"
              valueFrom: ~
            - name: AUTO_CREATE_CLUSTER
              value: "1"
            - name: AUTO_CREATE_CLUSTER_NAME
              value: "microk8s"
            - name: AUTO_CREATE_CLUSTER_TOKEN
              value: this-is-definitely-not-a-secret
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SHARED_PASSWORD_BCRYPT
              value: $2a$10$xZRsZCYgRDG90N1QEjBxGOBDrDGE.rpcMENV4qNNo7pozYTEPGMwS
            - name: SESSION_KEY
              value: this-is-not-too-secret
            - name: API_ENCRYPTION_KEY
              value: IvWItkB8+ezMisPjSMBknT1PdKjBx7Xc/txZqOP8Y2Oe7+Jy
            - name: REPLICATED_API_ENDPOINT
              value: http://replicated-app:3000
            - name: API_ENDPOINT
              value: http://kotsadm.default.svc.cluster.local:3000
            - name: API_ADVERTISE_ENDPOINT
              value: http://127.0.0.1:30000
            - name: KOTSADM_ENV
              value: "dev"
            - name: ENABLE_WEB_PROXY
              value: "1"
            # - name: DISABLE_OUTBOUND_CONNECTIONS  
            #   value: "true"
      initContainers:
        - name: init-dex-db
          command:
          - "psql"
          args:
          - "-h"
          - "kotsadm-postgres"
          - "-U"
          - "kotsadm"
          - "-c"
          - "CREATE DATABASE dex;"
          - "-c"
          - "CREATE USER dex;"
          - "-c"
          - "ALTER USER dex WITH PASSWORD '$(DEX_PGPASSWORD)';"
          - "-c"
          - "GRANT ALL PRIVILEGES ON DATABASE dex TO dex;"
          env:
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: kotsadm-postgres
          - name: DEX_PGPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: kotsadm-dex-postgres
          image: kotsadm
          imagePullPolicy: IfNotPresent
      volumes:
        - emptyDir:
            medium: Memory
            sizeLimit: 1Gi
          name: backup
        - name: kubelet-client-cert
          secret:
            secretName: kubelet-client-cert
            optional: true
      hostAliases:
        - ip: 172.17.0.1
          hostnames:
            - kotsadm.kotsadmdevenv.com
            - dex.kotsadmdevenv.com
